// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using omdbapp.Data;

namespace omdbapp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200116200858_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("omdbapp.Models.MovieDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Actors")
                        .HasColumnType("TEXT");

                    b.Property<string>("Awards")
                        .HasColumnType("TEXT");

                    b.Property<string>("BoxOffice")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("DVD")
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasColumnType("TEXT");

                    b.Property<string>("Metascore")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plot")
                        .HasColumnType("TEXT");

                    b.Property<string>("Poster")
                        .HasColumnType("TEXT");

                    b.Property<string>("Production")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Released")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response")
                        .HasColumnType("TEXT");

                    b.Property<string>("Runtime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasColumnType("TEXT");

                    b.Property<string>("Writer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.Property<string>("imdbID")
                        .HasColumnType("TEXT");

                    b.Property<string>("imdbRating")
                        .HasColumnType("TEXT");

                    b.Property<string>("imdbVotes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MovieDetailsModels");
                });

            modelBuilder.Entity("omdbapp.Models.RatingItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieDetailsModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieDetailsModelId");

                    b.ToTable("RaingItems");
                });

            modelBuilder.Entity("omdbapp.Models.RatingItem", b =>
                {
                    b.HasOne("omdbapp.Models.MovieDetailsModel", null)
                        .WithMany("Ratings")
                        .HasForeignKey("MovieDetailsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
